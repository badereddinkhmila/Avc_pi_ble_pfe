SELECT * FROM pg_user;
\password badrouch
createdb db_name
\l
\q
\?
\exit
\q
CREATE DATABASE avc_db
\l
\c avc_db
\c badrouch 
\l
\dt
\cd db_na 
\cd db_name 
\c db_name 
\q
\l
\c db_name 
\l
\h
\?
\dt
cls
\dt
exit
\q
\q
\dt
\h
\t
\db
use avc_dbselect * from app_users
\l
\c avc_db 
\l
\dt
select * from app_usersexit
\q
CREATE DATABASE nyc_data;
\c nyc_data 
create extension if not exists timescaledb cascade;
DROP DATABASE nyc_data 
\d
\e
\q
drop database nyc_data 
\t
\d
\dt
\s
\c pg_statistic
\l
\c postgres 
\dt
\l
\q
\c pg_stat_database
\c avc_db 
SELECT * FROM timescaledb_information.hypertable
\l
\dt
SELECT * FROM timescaledb_information.hypertableSELECT * FROM patientdata 
\q
\c avc_db 
SELECT * FROM patientdata 
\c
\l
drop database template1;
create database spring_db;
\l
cls
\q
CREATE database lireddit3;
\q
\c lireddit3 
select * from user_id_seq select * from userselect * from user;
select * from user_id_seq ;
select * from user ;
select * from user_id_seq ;
select * from user_id_seq ;
select * from user ;
select * from "user";
\q
create database Reddit;
\q
\c Reddit
\c Redit
\q
\c reddit 
select * from user_id_seq;
select * from app_users;
drop table "user";
drop table user_id_seq;
\q
\c reddit 
delete from app_users;
\q
\c reddit 
\d app_users
\q
\c reddit 
\d
\d
select * from users
\d users
\q
\c reddit 
select * from users;
\d 
\ba 
\c badrouch 
DROP database reddit ;
create database reddit ;
\q
\c reddit 
select * from users;
delete from users ;
select * from users;
\q
