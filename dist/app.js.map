{"version":3,"sources":["../service/app.js"],"names":["clientId","connectUrl","dbhelper","dbHelpers","mqtthelper","mqttHelpers","checkDB","broker","on","noble","state","console","log","startScanning","devices","device","localName","advertisement","serviceData","serviceUuids","indexOf","address","undefined","push","discoverAllServicesAndCharacteristics","error","services","characteristics","forEach","service","chId","uuid","heart","battery","temp","ch","name","properties","includes","subscribe","data","isNotification","toJSON","mydata","Buffer","from","value","parseInt","toString","time","Math","trunc","Date","now","msg","connected","sendTemperature","insertTemp","then","resp","connect","pop"],"mappings":"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","file":"app.js","sourcesContent":["import noble from 'noble';\nimport { dbHelpers } from './dbHelpers';\nimport { mqttHelpers } from './mqttHelpers';\n\nconst clientId = 'Bader_Eddine_Khmila_Gateway_RBP_3B+';\nconst connectUrl = 'tcp://192.168.1.232:1883/mqtt'\n\n\nconst dbhelper = new dbHelpers();\n//dbhelper.initTables();\n\nconst mqtthelper=new mqttHelpers(clientId,connectUrl);\nmqtthelper.checkDB()\n\nmqtthelper.broker.on(\"connect\", function () {\n    mqtthelper.checkDB()\n});\n\nnoble.on('stateChange', (state) => {\n    if (state === 'poweredOn') {\n        console.log('Powered On');\n        noble.startScanning([], true);\n    }\n});\n\nnoble.on('scanStart', () => {\n    console.log('scan start');\n})\n\nnoble.on('scanStop', () => {\n    console.log('scan stopped');\n})\n\nlet devices=[]\n\nnoble.on('discover', (device) => {\n    let localName = device.advertisement.localName;\n    console.log(device.advertisement.serviceData,device.advertisement.serviceUuids)\n    console.log(devices.indexOf(device.advertisement.localName))\n    console.log('discovered: ', device.address);\n    if (localName !== undefined && localName !== \"\"){\n        device.on('connect',()=>{\n            console.log('connected to',device.address)\n            devices.push(device.address)\n            device.discoverAllServicesAndCharacteristics((error,services,characteristics)=>{\n                services.forEach((service,chId)=>{\n                    console.log('Uuid:'+service.uuid)    \n                })\n                let heart=null;\n                let battery=null;\n                let temp=null;\n                characteristics.forEach((ch,chId)=>{\n                    console.log('Uuid:'+ch.uuid,'Name:'+ch.name,'Properties:'+ch.properties)\n                    if(ch.name!==null && ch.name.includes(\"Heart Rate Meas\")){\n                        heart=ch  \n                    }\n                    if(ch.name!==null && ch.name.includes(\"Temperature Meas\")){\n                        console.log('Found it');\n                        temp=ch  \n                    }\n                    if(ch.name!==null && ch.name.includes(\"Battery Level\")){\n                        console.log('Found it');\n                        battery=ch  \n                    }\n                })\n                if(heart !== null ){\n                console.log('type: ',heart.name)\n                heart.subscribe((error)=>{\n                    console.log('in subs')\n                    if(error){console.log('my error: ',error)}\n                })\n                heart.on('data',(data,isNotification)=>{\n                    //let mydata=Buffer.from(data)\n                    console.log((data.toJSON())['data']) \n                })\n                }\n                if(temp !== null ){\n                    console.log('type: ',temp.name)\n                    temp.subscribe((error)=>{\n                        if(error){console.log('my error:',error)}\n                    })\n                    temp.on('data',(data,isNotification)=>{\n                        let mydata=Buffer.from(data)\n                        console.log((mydata.toJSON())['data'])\n                        console.log('data event',mydata) \n                    })\n                    }\n                if(battery !== null ){\n                    console.log('type: ',battery.name)\n                    battery.subscribe((error)=>{\n                        console.log('in subs')\n                        if(error){console.log('my error: ',error)}\n                    })\n                    battery.on('data',(data,isNotification)=>{\n                        console.log((data.toJSON())['data'])\n                        let value=parseInt(data.toString('hex'),16)\n                        let time=Math.trunc(Date.now()/1000)\n                        let msg={'temperature':value,'collect_time':time};\n                        if(mqtthelper.broker.connected)\n                        {\n                            console.log('Sendig through the broker');\n                            mqtthelper.sendTemperature(msg)\n                        }\n                        else{\n                            console.log('Falling to sqlite3 local storage')\n                            dbhelper.insertTemp(msg)\n                            .then(resp=>{console.log(resp);})\n                        }\n                    })\n                }\n            \n            })\n        })\n\n        if(devices.indexOf(device.address)==-1){\n        device.connect((error)=>{\n            if (error) {\n                console.log(error)\n            }\n            console.log(device.address,'connected!!')\n            noble.startScanning();\n        })\n        device.on('disconnect',(error)=>{\n            if(error) console.log(error);\n            console.log('disconnected ...');\n            devices.pop(device.advertisement.localName)\n        })\n    }\n    }\n    \n})\n"]}